# .github/workflows/generate-keystore.yml
name: Generate Android Keystore

on:
  workflow_dispatch: # 允许手动触发

jobs:
  generate-keystore:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Java (JDK) 环境
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 动态生成签名密钥库和 keystore.properties
        id: generate_keys
        run: |
          KEYSTORE_FILENAME="release.jks"
          PROPERTIES_FILENAME="keystore.properties"
          
          # 直接使用 env 中定义的环境变量
          # 如果 secrets 未设置，这些环境变量的值会是空
          # 你需要在运行前确保 GitHub Secrets 已经设置了
          # 或者，在这里为这些 bash 变量提供默认值，如果 env 中的变量为空
          
          # 检查并使用环境变量，如果为空则使用硬编码的默认值（不推荐用于生产）
          # 更安全的做法是确保 Secret 总是被设置
          STORE_PASSWORD_TO_USE="${NEW_RELEASE_STORE_PASSWORD:-your-fallback-store-password}"
          KEY_ALIAS_TO_USE="${NEW_RELEASE_KEY_ALIAS:-your-fallback-key-alias}"
          KEY_PASSWORD_TO_USE="${NEW_RELEASE_KEY_PASSWORD:-your-fallback-key-password}"

          # 或者，如果要求 Secret 必须存在，可以添加检查
          if [ -z "$NEW_RELEASE_STORE_PASSWORD" ] || [ -z "$NEW_RELEASE_KEY_ALIAS" ] || [ -z "$NEW_RELEASE_KEY_PASSWORD" ]; then
            echo "错误：必要的 Secrets (YOUR_DESIRED_STORE_PASSWORD, YOUR_DESIRED_KEY_ALIAS, YOUR_DESIRED_KEY_PASSWORD) 未设置。"
            echo "请在仓库的 Settings -> Secrets and variables -> Actions 中设置它们。"
            exit 1
          fi
          STORE_PASSWORD_TO_USE="$NEW_RELEASE_STORE_PASSWORD"
          KEY_ALIAS_TO_USE="$NEW_RELEASE_KEY_ALIAS"
          KEY_PASSWORD_TO_USE="$NEW_RELEASE_KEY_PASSWORD"


          echo "动态生成签名密钥库 ($KEYSTORE_FILENAME)..."
          keytool -genkey -v \
            -keystore $KEYSTORE_FILENAME \
            -storepass "$STORE_PASSWORD_TO_USE" \
            -alias "$KEY_ALIAS_TO_USE" \
            -keypass "$KEY_PASSWORD_TO_USE" \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=MusicFree, OU=Dev, O=GitHub Actions, L=CI, ST=CI, C=US" # 请根据需要修改

          echo "创建 $PROPERTIES_FILENAME..."
          echo "RELEASE_STORE_FILE=../../$KEYSTORE_FILENAME" > $PROPERTIES_FILENAME
          echo "RELEASE_STORE_PASSWORD=$STORE_PASSWORD_TO_USE" >> $PROPERTIES_FILENAME
          echo "RELEASE_KEY_ALIAS=$KEY_ALIAS_TO_USE" >> $PROPERTIES_FILENAME
          echo "RELEASE_KEY_PASSWORD=$KEY_PASSWORD_TO_USE" >> $PROPERTIES_FILENAME

          echo "::set-output name=keystore_filename::$KEYSTORE_FILENAME"
          echo "::set-output name=properties_filename::$PROPERTIES_FILENAME"
        env:
          # 这些环境变量会从 GitHub Secrets 中获取值
          # 确保 Secrets 的名称与这里引用的名称一致 (YOUR_DESIRED_*)
          NEW_RELEASE_STORE_PASSWORD: ${{ secrets.YOUR_DESIRED_STORE_PASSWORD }}
          NEW_RELEASE_KEY_ALIAS: ${{ secrets.YOUR_DESIRED_KEY_ALIAS }}
          NEW_RELEASE_KEY_PASSWORD: ${{ secrets.YOUR_DESIRED_KEY_PASSWORD }}

      - name: 上传生成的密钥文件
        uses: actions/upload-artifact@v4
        with:
          name: android-signing-keys
          path: |
            ${{ steps.generate_keys.outputs.keystore_filename }}
            ${{ steps.generate_keys.outputs.properties_filename }}
